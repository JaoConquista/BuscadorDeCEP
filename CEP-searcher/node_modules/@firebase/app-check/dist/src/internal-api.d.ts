/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { FirebaseApp } from '@firebase/app-types';
<<<<<<< HEAD
import { AppCheckTokenListener, AppCheckTokenResult } from '@firebase/app-check-interop-types';
import { AppCheckTokenInternal, ListenerType } from './state';
=======
import { AppCheckTokenResult, AppCheckTokenListener } from '@firebase/app-check-interop-types';
>>>>>>> d98fa87d3bd26ef0e88bc6afe46530c3f86f63c1
import { Provider } from '@firebase/component';
export declare const defaultTokenErrorData: {
    error: string;
};
/**
<<<<<<< HEAD
=======
 * Stringify and base64 encode token error data.
 *
 * @param tokenError Error data, currently hardcoded.
 */
export declare function formatDummyToken(tokenErrorData: Record<string, string>): string;
/**
>>>>>>> d98fa87d3bd26ef0e88bc6afe46530c3f86f63c1
 * This function will always resolve.
 * The result will contain an error field if there is any error.
 * In case there is an error, the token field in the result will be populated with a dummy value
 */
export declare function getToken(app: FirebaseApp, platformLoggerProvider: Provider<'platform-logger'>, forceRefresh?: boolean): Promise<AppCheckTokenResult>;
<<<<<<< HEAD
export declare function addTokenListener(app: FirebaseApp, platformLoggerProvider: Provider<'platform-logger'>, type: ListenerType, listener: AppCheckTokenListener, onError?: (error: Error) => void): void;
export declare function removeTokenListener(app: FirebaseApp, listener: (token: AppCheckTokenResult) => void): void;
export declare function isValid(token: AppCheckTokenInternal): boolean;
=======
export declare function addTokenListener(app: FirebaseApp, platformLoggerProvider: Provider<'platform-logger'>, listener: AppCheckTokenListener): void;
export declare function removeTokenListener(app: FirebaseApp, listener: AppCheckTokenListener): void;
>>>>>>> d98fa87d3bd26ef0e88bc6afe46530c3f86f63c1
